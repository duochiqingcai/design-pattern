通常单例模式在Java语言中，有两种构建方式：

饿汉方式。指全局的单例实例在类装载时构建
懒汉方式。指全局的单例实例在第一次被使用时构建。
不管是那种创建方式，它们通常都存在下面几点相似处：

单例类必须要有一个 private 访问级别的构造函数，只有这样，才能确保单例不会在系统中的其他代码内被实例化;
instance 成员变量和 uniqueInstance 方法必须是 static 的。
单例模式方式：
饿汉方式(线程安全）
懒汉式（非线程安全和synchronized关键字线程安全版本)
懒汉式(双重检查加锁版本)
懒汉式（登记式/静态内部类方式）
饿汉式（枚举方式